#extension GL_EXT_ray_query: require

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

uniform accelerationStructureEXT Accel;
uniform writeonly image2D Framebuffer;

void main() {
    vec2 Resolution = vec2(gl_NumWorkGroups.xy * gl_WorkGroupSize.xy);
    vec3 Color = vec3(0.0);

    vec3 O = vec3(2.0 * gl_GlobalInvocationID.xy / Resolution - 1.0, -1.0);
    vec3 D = vec3(0.0, 0.0, 1.0);
    rayQueryEXT query;
    rayQueryInitializeEXT(query, Accel, 0, 0xFF, O, 1e-3, D, 1e3);
    rayQueryProceedEXT(query);

    if (rayQueryGetIntersectionTypeEXT(query, true) != 0) {
        // we touched something
        Color.gb = rayQueryGetIntersectionBarycentricsEXT(query, true);
        Color.r = 1.0 - Color.g - Color.b;
    }

    imageStore(Framebuffer, ivec2(gl_GlobalInvocationID), vec4(Color, 1.0));
}
